2023-08-22 11:14:49.593  INFO 9564 --- [restartedMain] c.e.testspring.TestSpringApplication     : Starting TestSpringApplication using Java 17.0.6 on MSI with PID 9564 (F:\spring-web\SpringProject3\target\classes started by tduca in F:\spring-web\SpringProject3)
2023-08-22 11:14:49.603  INFO 9564 --- [restartedMain] c.e.testspring.TestSpringApplication     : No active profile set, falling back to 1 default profile: "default"
2023-08-22 11:14:50.019  INFO 9564 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-08-22 11:14:50.019  INFO 9564 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-08-22 11:14:51.573  INFO 9564 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-22 11:14:51.673  INFO 9564 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 90 ms. Found 8 JPA repository interfaces.
2023-08-22 11:14:52.358  INFO 9564 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$4bc456c6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-22 11:14:52.486  INFO 9564 --- [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2023-08-22 11:14:53.763  INFO 9564 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-08-22 11:14:53.789  INFO 9564 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-08-22 11:14:53.790  INFO 9564 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.76]
2023-08-22 11:14:54.053  INFO 9564 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-08-22 11:14:54.054  INFO 9564 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4034 ms
2023-08-22 11:14:54.439  INFO 9564 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-22 11:14:54.582  INFO 9564 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-08-22 11:14:54.893  INFO 9564 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-08-22 11:14:55.079  INFO 9564 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-08-22 11:14:55.562  INFO 9564 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-08-22 11:14:55.584  INFO 9564 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-08-22 11:14:57.125  INFO 9564 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-08-22 11:14:57.135  INFO 9564 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 11:14:59.111  INFO 9564 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@760b32be, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@78395dbb, org.springframework.security.web.context.SecurityContextPersistenceFilter@26bc0fb7, org.springframework.security.web.header.HeaderWriterFilter@13df6851, org.springframework.security.web.authentication.logout.LogoutFilter@329dea8c, com.example.testspring.JwTtokenFilter@5a90ba6c, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@e100589, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@155ed0ca, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4fbc27a8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@64b27e9b, org.springframework.security.web.session.SessionManagementFilter@62299967, org.springframework.security.web.access.ExceptionTranslationFilter@1f34e1b3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@586aef67]
2023-08-22 11:14:59.379  WARN 9564 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-08-22 11:15:00.242  INFO 9564 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-08-22 11:15:00.302  INFO 9564 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-08-22 11:15:00.317  INFO 9564 --- [restartedMain] c.e.testspring.TestSpringApplication     : Started TestSpringApplication in 11.742 seconds (JVM running for 12.997)
2023-08-22 11:23:33.033  INFO 9564 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-22 11:23:33.034  INFO 9564 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-08-22 11:23:33.036  INFO 9564 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2023-08-22 11:23:33.170  INFO 9564 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : INTERCEPTOR
2023-08-22 11:23:33.171  INFO 9564 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : 0:0:0:0:0:0:0:1
2023-08-22 11:23:33.171  INFO 9564 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : /user/
2023-08-22 11:23:34.021  INFO 9564 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : Done Request
2023-08-22 11:33:06.731  INFO 9564 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 11:33:06.736  INFO 9564 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2023-08-22 11:33:06.753  INFO 9564 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2023-08-22 11:33:13.486  INFO 16964 --- [restartedMain] c.e.testspring.TestSpringApplication     : Starting TestSpringApplication using Java 17.0.6 on MSI with PID 16964 (F:\spring-web\SpringProject3\target\classes started by tduca in F:\spring-web\SpringProject3)
2023-08-22 11:33:13.490  INFO 16964 --- [restartedMain] c.e.testspring.TestSpringApplication     : No active profile set, falling back to 1 default profile: "default"
2023-08-22 11:33:13.897  INFO 16964 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-08-22 11:33:13.897  INFO 16964 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-08-22 11:33:14.974  INFO 16964 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-22 11:33:15.075  INFO 16964 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 94 ms. Found 8 JPA repository interfaces.
2023-08-22 11:33:15.615  INFO 16964 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$3b698175] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-22 11:33:15.706  INFO 16964 --- [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2023-08-22 11:33:16.772  INFO 16964 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-08-22 11:33:16.791  INFO 16964 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-08-22 11:33:16.792  INFO 16964 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.76]
2023-08-22 11:33:16.968  INFO 16964 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-08-22 11:33:16.969  INFO 16964 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3071 ms
2023-08-22 11:33:17.286  INFO 16964 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-22 11:33:17.370  INFO 16964 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-08-22 11:33:17.618  INFO 16964 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-08-22 11:33:17.767  INFO 16964 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-08-22 11:33:18.237  INFO 16964 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-08-22 11:33:18.261  INFO 16964 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-08-22 11:33:19.620  INFO 16964 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-08-22 11:33:19.627  INFO 16964 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 11:33:21.083  INFO 16964 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6d546754, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1732f0b3, org.springframework.security.web.context.SecurityContextPersistenceFilter@525247aa, org.springframework.security.web.header.HeaderWriterFilter@29d71a85, org.springframework.security.web.authentication.logout.LogoutFilter@30b9af4d, com.example.testspring.JwTtokenFilter@28fe24f8, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@ceece5b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4a342b21, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2e836dbe, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7782c3c5, org.springframework.security.web.session.SessionManagementFilter@5a0c17d6, org.springframework.security.web.access.ExceptionTranslationFilter@656f7dbd, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@f88aca3]
2023-08-22 11:33:21.345  WARN 16964 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-08-22 11:33:21.999  INFO 16964 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-08-22 11:33:22.054  INFO 16964 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-08-22 11:33:22.070  INFO 16964 --- [restartedMain] c.e.testspring.TestSpringApplication     : Started TestSpringApplication in 9.275 seconds (JVM running for 9.997)
2023-08-22 11:35:47.649  INFO 16964 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 11:35:47.654  INFO 16964 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2023-08-22 11:35:47.664  INFO 16964 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2023-08-22 11:35:53.159  INFO 6596 --- [restartedMain] c.e.testspring.TestSpringApplication     : Starting TestSpringApplication using Java 17.0.6 on MSI with PID 6596 (F:\spring-web\SpringProject3\target\classes started by tduca in F:\spring-web\SpringProject3)
2023-08-22 11:35:53.162  INFO 6596 --- [restartedMain] c.e.testspring.TestSpringApplication     : No active profile set, falling back to 1 default profile: "default"
2023-08-22 11:35:53.561  INFO 6596 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-08-22 11:35:53.561  INFO 6596 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-08-22 11:35:54.651  INFO 6596 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-22 11:35:54.735  INFO 6596 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 79 ms. Found 8 JPA repository interfaces.
2023-08-22 11:35:55.310  INFO 6596 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$40d40028] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-22 11:35:55.420  INFO 6596 --- [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2023-08-22 11:35:56.401  INFO 6596 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-08-22 11:35:56.436  INFO 6596 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-08-22 11:35:56.437  INFO 6596 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.76]
2023-08-22 11:35:56.629  INFO 6596 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-08-22 11:35:56.629  INFO 6596 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3067 ms
2023-08-22 11:35:56.968  INFO 6596 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-22 11:35:57.031  INFO 6596 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-08-22 11:35:57.235  INFO 6596 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-08-22 11:35:57.400  INFO 6596 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-08-22 11:35:57.842  INFO 6596 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-08-22 11:35:57.864  INFO 6596 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-08-22 11:35:59.397  INFO 6596 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-08-22 11:35:59.400  INFO 6596 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 11:36:01.130  INFO 6596 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4627b904, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2acf96b9, org.springframework.security.web.context.SecurityContextPersistenceFilter@31cab217, org.springframework.security.web.header.HeaderWriterFilter@58439c2, org.springframework.security.web.authentication.logout.LogoutFilter@6081076b, com.example.testspring.JwTtokenFilter@7a94f819, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3b9ae3ca, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5ac88b3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5c725e1d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5d5206be, org.springframework.security.web.session.SessionManagementFilter@5bb181d, org.springframework.security.web.access.ExceptionTranslationFilter@60b03886, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6d1b6faa]
2023-08-22 11:36:01.397  WARN 6596 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-08-22 11:36:02.377  INFO 6596 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-08-22 11:36:02.432  INFO 6596 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-08-22 11:36:02.454  INFO 6596 --- [restartedMain] c.e.testspring.TestSpringApplication     : Started TestSpringApplication in 9.9 seconds (JVM running for 10.628)
2023-08-22 11:36:07.839  INFO 6596 --- [http-nio-8080-exec-4] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-22 11:36:07.839  INFO 6596 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-08-22 11:36:07.841  INFO 6596 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms
2023-08-22 11:36:08.022  WARN 6596 --- [http-nio-8080-exec-4] o.a.c.util.SessionIdGeneratorBase        : Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [136] milliseconds.
2023-08-22 11:36:08.043  INFO 6596 --- [http-nio-8080-exec-4] c.e.t.loginterceptor.LogInterceptor      : INTERCEPTOR
2023-08-22 11:36:08.043  INFO 6596 --- [http-nio-8080-exec-4] c.e.t.loginterceptor.LogInterceptor      : 0:0:0:0:0:0:0:1
2023-08-22 11:36:08.043  INFO 6596 --- [http-nio-8080-exec-4] c.e.t.loginterceptor.LogInterceptor      : /error
2023-08-22 11:36:08.116  INFO 6596 --- [http-nio-8080-exec-4] c.e.t.loginterceptor.LogInterceptor      : Done Request
2023-08-22 11:36:15.744  INFO 6596 --- [http-nio-8080-exec-2] c.e.t.loginterceptor.LogInterceptor      : INTERCEPTOR
2023-08-22 11:36:15.744  INFO 6596 --- [http-nio-8080-exec-2] c.e.t.loginterceptor.LogInterceptor      : 0:0:0:0:0:0:0:1
2023-08-22 11:36:15.744  INFO 6596 --- [http-nio-8080-exec-2] c.e.t.loginterceptor.LogInterceptor      : /login/
2023-08-22 11:36:16.040  INFO 6596 --- [http-nio-8080-exec-2] c.e.t.loginterceptor.LogInterceptor      : Done Request
2023-08-22 11:38:14.317  INFO 6596 --- [http-nio-8080-exec-6] c.e.t.loginterceptor.LogInterceptor      : INTERCEPTOR
2023-08-22 11:38:14.317  INFO 6596 --- [http-nio-8080-exec-6] c.e.t.loginterceptor.LogInterceptor      : 0:0:0:0:0:0:0:1
2023-08-22 11:38:14.317  INFO 6596 --- [http-nio-8080-exec-6] c.e.t.loginterceptor.LogInterceptor      : /admin/bill/
2023-08-22 11:38:14.384  WARN 6596 --- [http-nio-8080-exec-6] .c.j.MappingJackson2HttpMessageConverter : Failed to evaluate Jackson deserialization for type [[simple type, class com.example.testspring.dto.BillDTO]]: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot handle managed/back reference 'defaultReference': no back reference property found from type `java.util.List<com.example.testspring.dto.BillItemDTO>`
2023-08-22 11:38:14.399  WARN 6596 --- [http-nio-8080-exec-6] .c.j.MappingJackson2HttpMessageConverter : Failed to evaluate Jackson deserialization for type [[simple type, class com.example.testspring.dto.BillDTO]]: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot handle managed/back reference 'defaultReference': no back reference property found from type `java.util.List<com.example.testspring.dto.BillItemDTO>`
2023-08-22 11:38:14.411  INFO 6596 --- [http-nio-8080-exec-6] c.e.t.controller.ExceptionController     : INFO

org.springframework.web.HttpMediaTypeNotSupportedException: Content type 'application/json;charset=UTF-8' not supported
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:211) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555) ~[tomcat-embed-core-9.0.76.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623) ~[tomcat-embed-core-9.0.76.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111) ~[spring-web-5.3.28.jar:5.3.28]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:164) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at com.example.testspring.JwTtokenFilter.doFilterInternal(JwTtokenFilter.java:42) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.28.jar:5.3.28]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]

2023-08-22 11:38:14.416  WARN 6596 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.HttpMediaTypeNotSupportedException: Content type 'application/json;charset=UTF-8' not supported]
2023-08-22 11:38:14.416  INFO 6596 --- [http-nio-8080-exec-6] c.e.t.loginterceptor.LogInterceptor      : Done Request
2023-08-22 11:41:02.355  INFO 6596 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 11:41:02.359  INFO 6596 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2023-08-22 11:41:02.369  INFO 6596 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2023-08-22 11:41:07.706  INFO 12556 --- [restartedMain] c.e.testspring.TestSpringApplication     : Starting TestSpringApplication using Java 17.0.6 on MSI with PID 12556 (F:\spring-web\SpringProject3\target\classes started by tduca in F:\spring-web\SpringProject3)
2023-08-22 11:41:07.708  INFO 12556 --- [restartedMain] c.e.testspring.TestSpringApplication     : No active profile set, falling back to 1 default profile: "default"
2023-08-22 11:41:08.040  INFO 12556 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-08-22 11:41:08.040  INFO 12556 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-08-22 11:41:09.322  INFO 12556 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-22 11:41:09.447  INFO 12556 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 111 ms. Found 8 JPA repository interfaces.
2023-08-22 11:41:10.034  INFO 12556 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$3b698175] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-22 11:41:10.096  INFO 12556 --- [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2023-08-22 11:41:11.159  INFO 12556 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-08-22 11:41:11.176  INFO 12556 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-08-22 11:41:11.178  INFO 12556 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.76]
2023-08-22 11:41:11.358  INFO 12556 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-08-22 11:41:11.359  INFO 12556 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3318 ms
2023-08-22 11:41:11.652  INFO 12556 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-22 11:41:11.707  INFO 12556 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-08-22 11:41:11.988  INFO 12556 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-08-22 11:41:12.245  INFO 12556 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-08-22 11:41:12.640  INFO 12556 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-08-22 11:41:12.663  INFO 12556 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-08-22 11:41:14.318  INFO 12556 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-08-22 11:41:14.331  INFO 12556 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 11:41:15.985  INFO 12556 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@74dbee06, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@657e9f9d, org.springframework.security.web.context.SecurityContextPersistenceFilter@3020ec43, org.springframework.security.web.header.HeaderWriterFilter@7ecd0e6, org.springframework.security.web.authentication.logout.LogoutFilter@7d54fd94, com.example.testspring.JwTtokenFilter@28fe24f8, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@41aa03db, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1917d82a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@ceece5b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@62e28b57, org.springframework.security.web.session.SessionManagementFilter@71d48462, org.springframework.security.web.access.ExceptionTranslationFilter@3424f4d9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@722ecc43]
2023-08-22 11:41:16.221  WARN 12556 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-08-22 11:41:16.992  INFO 12556 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-08-22 11:41:17.044  INFO 12556 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-08-22 11:41:17.064  INFO 12556 --- [restartedMain] c.e.testspring.TestSpringApplication     : Started TestSpringApplication in 9.973 seconds (JVM running for 10.651)
2023-08-22 11:41:22.270  INFO 12556 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-22 11:41:22.270  INFO 12556 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-08-22 11:41:22.278  INFO 12556 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2023-08-22 11:41:22.446  INFO 12556 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : INTERCEPTOR
2023-08-22 11:41:22.447  INFO 12556 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : 0:0:0:0:0:0:0:1
2023-08-22 11:41:22.447  INFO 12556 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : /admin/bill/
2023-08-22 11:41:22.599  WARN 12556 --- [http-nio-8080-exec-1] .c.j.MappingJackson2HttpMessageConverter : Failed to evaluate Jackson deserialization for type [[simple type, class com.example.testspring.dto.BillDTO]]: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot handle managed/back reference 'defaultReference': no back reference property found from type `java.util.List<com.example.testspring.dto.BillItemDTO>`
2023-08-22 11:41:22.618  WARN 12556 --- [http-nio-8080-exec-1] .c.j.MappingJackson2HttpMessageConverter : Failed to evaluate Jackson deserialization for type [[simple type, class com.example.testspring.dto.BillDTO]]: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot handle managed/back reference 'defaultReference': no back reference property found from type `java.util.List<com.example.testspring.dto.BillItemDTO>`
2023-08-22 11:41:22.629  INFO 12556 --- [http-nio-8080-exec-1] c.e.t.controller.ExceptionController     : INFO

org.springframework.web.HttpMediaTypeNotSupportedException: Content type 'application/json;charset=UTF-8' not supported
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:211) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555) ~[tomcat-embed-core-9.0.76.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623) ~[tomcat-embed-core-9.0.76.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111) ~[spring-web-5.3.28.jar:5.3.28]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:164) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at com.example.testspring.JwTtokenFilter.doFilterInternal(JwTtokenFilter.java:42) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.28.jar:5.3.28]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]

2023-08-22 11:41:22.667  WARN 12556 --- [http-nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.HttpMediaTypeNotSupportedException: Content type 'application/json;charset=UTF-8' not supported]
2023-08-22 11:41:22.668  INFO 12556 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : Done Request
2023-08-22 11:42:06.597  INFO 12556 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 11:42:06.601  INFO 12556 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2023-08-22 11:42:06.609  INFO 12556 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2023-08-22 11:42:12.187  INFO 11952 --- [restartedMain] c.e.testspring.TestSpringApplication     : Starting TestSpringApplication using Java 17.0.6 on MSI with PID 11952 (F:\spring-web\SpringProject3\target\classes started by tduca in F:\spring-web\SpringProject3)
2023-08-22 11:42:12.188  INFO 11952 --- [restartedMain] c.e.testspring.TestSpringApplication     : No active profile set, falling back to 1 default profile: "default"
2023-08-22 11:42:12.564  INFO 11952 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-08-22 11:42:12.565  INFO 11952 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-08-22 11:42:13.660  INFO 11952 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-22 11:42:13.771  INFO 11952 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 100 ms. Found 8 JPA repository interfaces.
2023-08-22 11:42:14.428  INFO 11952 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$2ab974c1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-22 11:42:14.483  INFO 11952 --- [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2023-08-22 11:42:15.522  INFO 11952 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-08-22 11:42:15.553  INFO 11952 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-08-22 11:42:15.553  INFO 11952 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.76]
2023-08-22 11:42:15.722  INFO 11952 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-08-22 11:42:15.722  INFO 11952 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3156 ms
2023-08-22 11:42:16.020  INFO 11952 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-22 11:42:16.071  INFO 11952 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-08-22 11:42:16.334  INFO 11952 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-08-22 11:42:16.459  INFO 11952 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-08-22 11:42:16.836  INFO 11952 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-08-22 11:42:16.852  INFO 11952 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-08-22 11:42:18.107  INFO 11952 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-08-22 11:42:18.107  INFO 11952 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 11:42:19.648  INFO 11952 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@218b9575, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4222eb0c, org.springframework.security.web.context.SecurityContextPersistenceFilter@62279ba, org.springframework.security.web.header.HeaderWriterFilter@5dd7166d, org.springframework.security.web.authentication.logout.LogoutFilter@1e09054c, com.example.testspring.JwTtokenFilter@107d1f9f, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@28496068, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@50ad356f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7aa2e96c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@72b48269, org.springframework.security.web.session.SessionManagementFilter@7f1bd236, org.springframework.security.web.access.ExceptionTranslationFilter@6219ed5e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7954d781]
2023-08-22 11:42:19.898  WARN 11952 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-08-22 11:42:20.620  INFO 11952 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-08-22 11:42:20.675  INFO 11952 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-08-22 11:42:20.692  INFO 11952 --- [restartedMain] c.e.testspring.TestSpringApplication     : Started TestSpringApplication in 9.219 seconds (JVM running for 9.957)
2023-08-22 11:42:43.370  INFO 11952 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-22 11:42:43.371  INFO 11952 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-08-22 11:42:43.372  INFO 11952 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2023-08-22 11:42:43.522  INFO 11952 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : INTERCEPTOR
2023-08-22 11:42:43.523  INFO 11952 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : 0:0:0:0:0:0:0:1
2023-08-22 11:42:43.523  INFO 11952 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : /admin/bill/
2023-08-22 11:42:43.910  INFO 11952 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : Done Request
2023-08-22 11:49:23.433  INFO 11952 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 11:49:23.440  INFO 11952 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2023-08-22 11:49:23.459  INFO 11952 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2023-08-22 11:49:30.265  INFO 7232 --- [restartedMain] c.e.testspring.TestSpringApplication     : Starting TestSpringApplication using Java 17.0.6 on MSI with PID 7232 (F:\spring-web\SpringProject3\target\classes started by tduca in F:\spring-web\SpringProject3)
2023-08-22 11:49:30.268  INFO 7232 --- [restartedMain] c.e.testspring.TestSpringApplication     : No active profile set, falling back to 1 default profile: "default"
2023-08-22 11:49:30.656  INFO 7232 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-08-22 11:49:30.657  INFO 7232 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-08-22 11:49:31.731  INFO 7232 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-22 11:49:31.820  INFO 7232 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 82 ms. Found 8 JPA repository interfaces.
2023-08-22 11:49:32.397  INFO 7232 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$f62a6d6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-22 11:49:32.524  INFO 7232 --- [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2023-08-22 11:49:33.597  INFO 7232 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-08-22 11:49:33.617  INFO 7232 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-08-22 11:49:33.618  INFO 7232 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.76]
2023-08-22 11:49:33.794  INFO 7232 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-08-22 11:49:33.794  INFO 7232 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3137 ms
2023-08-22 11:49:34.078  INFO 7232 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-22 11:49:34.185  INFO 7232 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-08-22 11:49:34.456  INFO 7232 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-08-22 11:49:34.585  INFO 7232 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-08-22 11:49:35.061  INFO 7232 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-08-22 11:49:35.078  INFO 7232 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-08-22 11:49:36.395  INFO 7232 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-08-22 11:49:36.402  INFO 7232 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 11:49:37.968  INFO 7232 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7197b00f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5af6d711, org.springframework.security.web.context.SecurityContextPersistenceFilter@75c4ab09, org.springframework.security.web.header.HeaderWriterFilter@5a56b2ab, org.springframework.security.web.authentication.logout.LogoutFilter@324b748e, com.example.testspring.JwTtokenFilter@2e4a4101, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1d16db8f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7485e6d7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@62299967, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4703e727, org.springframework.security.web.session.SessionManagementFilter@5d7d79df, org.springframework.security.web.access.ExceptionTranslationFilter@1441cd27, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@381202c]
2023-08-22 11:49:38.213  WARN 7232 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-08-22 11:49:38.920  INFO 7232 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-08-22 11:49:38.975  INFO 7232 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-08-22 11:49:38.992  INFO 7232 --- [restartedMain] c.e.testspring.TestSpringApplication     : Started TestSpringApplication in 9.565 seconds (JVM running for 10.381)
2023-08-22 11:51:38.254  INFO 7232 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 11:51:38.257  INFO 7232 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2023-08-22 11:51:38.268  INFO 7232 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2023-08-22 11:51:43.594  INFO 14980 --- [restartedMain] c.e.testspring.TestSpringApplication     : Starting TestSpringApplication using Java 17.0.6 on MSI with PID 14980 (F:\spring-web\SpringProject3\target\classes started by tduca in F:\spring-web\SpringProject3)
2023-08-22 11:51:43.598  INFO 14980 --- [restartedMain] c.e.testspring.TestSpringApplication     : No active profile set, falling back to 1 default profile: "default"
2023-08-22 11:51:43.937  INFO 14980 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-08-22 11:51:43.937  INFO 14980 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-08-22 11:51:45.065  INFO 14980 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-22 11:51:45.163  INFO 14980 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 89 ms. Found 8 JPA repository interfaces.
2023-08-22 11:51:45.757  INFO 14980 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$40d40028] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-22 11:51:45.822  INFO 14980 --- [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2023-08-22 11:51:46.788  INFO 14980 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-08-22 11:51:46.802  INFO 14980 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-08-22 11:51:46.803  INFO 14980 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.76]
2023-08-22 11:51:46.977  INFO 14980 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-08-22 11:51:46.978  INFO 14980 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3040 ms
2023-08-22 11:51:47.258  INFO 14980 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-22 11:51:47.320  INFO 14980 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-08-22 11:51:47.556  INFO 14980 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-08-22 11:51:47.732  INFO 14980 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-08-22 11:51:48.143  INFO 14980 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-08-22 11:51:48.168  INFO 14980 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-08-22 11:51:49.693  INFO 14980 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-08-22 11:51:49.703  INFO 14980 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 11:51:51.411  INFO 14980 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@47c8b553, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@63bf9cf, org.springframework.security.web.context.SecurityContextPersistenceFilter@2d20d6d4, org.springframework.security.web.header.HeaderWriterFilter@448f0907, org.springframework.security.web.authentication.logout.LogoutFilter@89a845e, com.example.testspring.JwTtokenFilter@7a94f819, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@72c66e93, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2bf2ff6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@71e7fb30, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@17e4c923, org.springframework.security.web.session.SessionManagementFilter@6d1b6faa, org.springframework.security.web.access.ExceptionTranslationFilter@378b079c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@29d2bd59]
2023-08-22 11:51:51.694  WARN 14980 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-08-22 11:51:52.443  INFO 14980 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-08-22 11:51:52.505  INFO 14980 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-08-22 11:51:52.527  INFO 14980 --- [restartedMain] c.e.testspring.TestSpringApplication     : Started TestSpringApplication in 9.53 seconds (JVM running for 10.315)
2023-08-22 11:52:08.477  INFO 14980 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-22 11:52:08.477  INFO 14980 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-08-22 11:52:08.478  INFO 14980 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2023-08-22 11:52:08.653  INFO 14980 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : INTERCEPTOR
2023-08-22 11:52:08.653  INFO 14980 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : 0:0:0:0:0:0:0:1
2023-08-22 11:52:08.653  INFO 14980 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : /admin/bill/
2023-08-22 11:52:08.967  INFO 14980 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : Done Request
2023-08-22 11:53:09.244  INFO 14980 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 11:53:09.247  INFO 14980 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2023-08-22 11:53:09.258  INFO 14980 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2023-08-22 11:53:14.990  INFO 1644 --- [restartedMain] c.e.testspring.TestSpringApplication     : Starting TestSpringApplication using Java 17.0.6 on MSI with PID 1644 (F:\spring-web\SpringProject3\target\classes started by tduca in F:\spring-web\SpringProject3)
2023-08-22 11:53:14.994  INFO 1644 --- [restartedMain] c.e.testspring.TestSpringApplication     : No active profile set, falling back to 1 default profile: "default"
2023-08-22 11:53:15.337  INFO 1644 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-08-22 11:53:15.338  INFO 1644 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-08-22 11:53:16.407  INFO 1644 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-22 11:53:16.502  INFO 1644 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 81 ms. Found 8 JPA repository interfaces.
2023-08-22 11:53:16.973  INFO 1644 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$3b698175] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-22 11:53:17.035  INFO 1644 --- [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2023-08-22 11:53:17.977  INFO 1644 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-08-22 11:53:17.992  INFO 1644 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-08-22 11:53:17.992  INFO 1644 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.76]
2023-08-22 11:53:18.181  INFO 1644 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-08-22 11:53:18.181  INFO 1644 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2842 ms
2023-08-22 11:53:18.447  INFO 1644 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-22 11:53:18.510  INFO 1644 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-08-22 11:53:18.824  INFO 1644 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-08-22 11:53:18.949  INFO 1644 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-08-22 11:53:19.311  INFO 1644 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-08-22 11:53:19.326  INFO 1644 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-08-22 11:53:20.518  INFO 1644 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-08-22 11:53:20.518  INFO 1644 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 11:53:22.101  INFO 1644 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@74dbee06, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@657e9f9d, org.springframework.security.web.context.SecurityContextPersistenceFilter@6b27b9eb, org.springframework.security.web.header.HeaderWriterFilter@28697210, org.springframework.security.web.authentication.logout.LogoutFilter@7d54fd94, com.example.testspring.JwTtokenFilter@249360ec, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@41aa03db, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1bbf902f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@ceece5b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@62e28b57, org.springframework.security.web.session.SessionManagementFilter@72812db, org.springframework.security.web.access.ExceptionTranslationFilter@7f0e3981, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@722ecc43]
2023-08-22 11:53:22.305  WARN 1644 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-08-22 11:53:22.995  INFO 1644 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-08-22 11:53:23.042  INFO 1644 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-08-22 11:53:23.057  INFO 1644 --- [restartedMain] c.e.testspring.TestSpringApplication     : Started TestSpringApplication in 8.693 seconds (JVM running for 9.365)
2023-08-22 11:54:52.114  INFO 1644 --- [http-nio-8080-exec-5] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-22 11:54:52.114  INFO 1644 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-08-22 11:54:52.116  INFO 1644 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2023-08-22 11:54:52.311  INFO 1644 --- [http-nio-8080-exec-5] c.e.t.loginterceptor.LogInterceptor      : INTERCEPTOR
2023-08-22 11:54:52.312  INFO 1644 --- [http-nio-8080-exec-5] c.e.t.loginterceptor.LogInterceptor      : 0:0:0:0:0:0:0:1
2023-08-22 11:54:52.312  INFO 1644 --- [http-nio-8080-exec-5] c.e.t.loginterceptor.LogInterceptor      : /admin/bill/
2023-08-22 11:54:52.653  INFO 1644 --- [http-nio-8080-exec-5] c.e.t.loginterceptor.LogInterceptor      : Done Request
2023-08-22 11:59:01.036  INFO 1644 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 11:59:01.041  INFO 1644 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2023-08-22 11:59:01.053  INFO 1644 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2023-08-22 11:59:06.529  INFO 15708 --- [restartedMain] c.e.testspring.TestSpringApplication     : Starting TestSpringApplication using Java 17.0.6 on MSI with PID 15708 (F:\spring-web\SpringProject3\target\classes started by tduca in F:\spring-web\SpringProject3)
2023-08-22 11:59:06.531  INFO 15708 --- [restartedMain] c.e.testspring.TestSpringApplication     : No active profile set, falling back to 1 default profile: "default"
2023-08-22 11:59:06.875  INFO 15708 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-08-22 11:59:06.875  INFO 15708 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-08-22 11:59:07.929  INFO 15708 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-22 11:59:08.030  INFO 15708 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 91 ms. Found 8 JPA repository interfaces.
2023-08-22 11:59:08.574  INFO 15708 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$d0124df2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-22 11:59:08.639  INFO 15708 --- [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2023-08-22 11:59:09.604  INFO 15708 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-08-22 11:59:09.618  INFO 15708 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-08-22 11:59:09.619  INFO 15708 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.76]
2023-08-22 11:59:09.784  INFO 15708 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-08-22 11:59:09.784  INFO 15708 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2908 ms
2023-08-22 11:59:10.041  INFO 15708 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-22 11:59:10.090  INFO 15708 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-08-22 11:59:10.263  INFO 15708 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-08-22 11:59:10.382  INFO 15708 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-08-22 11:59:10.809  INFO 15708 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-08-22 11:59:10.830  INFO 15708 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-08-22 11:59:12.625  INFO 15708 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-08-22 11:59:12.636  INFO 15708 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 11:59:14.315  INFO 15708 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6c6f1bab, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6d9194b6, org.springframework.security.web.context.SecurityContextPersistenceFilter@1cfbac61, org.springframework.security.web.header.HeaderWriterFilter@78022dd0, org.springframework.security.web.authentication.logout.LogoutFilter@4a2530b2, com.example.testspring.JwTtokenFilter@169a1bc5, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@15015ed, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1f7cfd36, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@28697210, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3085da02, org.springframework.security.web.session.SessionManagementFilter@114ba22, org.springframework.security.web.access.ExceptionTranslationFilter@622c1a95, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5c94b035]
2023-08-22 11:59:14.565  WARN 15708 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-08-22 11:59:15.317  INFO 15708 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-08-22 11:59:15.363  INFO 15708 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-08-22 11:59:15.378  INFO 15708 --- [restartedMain] c.e.testspring.TestSpringApplication     : Started TestSpringApplication in 9.471 seconds (JVM running for 10.187)
2023-08-22 12:03:31.425  INFO 15708 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 12:03:31.429  INFO 15708 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2023-08-22 12:03:31.439  INFO 15708 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2023-08-22 12:03:37.543  INFO 13828 --- [restartedMain] c.e.testspring.TestSpringApplication     : Starting TestSpringApplication using Java 17.0.6 on MSI with PID 13828 (F:\spring-web\SpringProject3\target\classes started by tduca in F:\spring-web\SpringProject3)
2023-08-22 12:03:37.546  INFO 13828 --- [restartedMain] c.e.testspring.TestSpringApplication     : No active profile set, falling back to 1 default profile: "default"
2023-08-22 12:03:37.926  INFO 13828 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-08-22 12:03:37.928  INFO 13828 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-08-22 12:03:39.034  INFO 13828 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-22 12:03:39.144  INFO 13828 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 102 ms. Found 8 JPA repository interfaces.
2023-08-22 12:03:39.784  INFO 13828 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$3b698175] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-22 12:03:39.851  INFO 13828 --- [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2023-08-22 12:03:40.807  INFO 13828 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-08-22 12:03:40.826  INFO 13828 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-08-22 12:03:40.827  INFO 13828 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.76]
2023-08-22 12:03:41.003  INFO 13828 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-08-22 12:03:41.004  INFO 13828 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3075 ms
2023-08-22 12:03:41.293  INFO 13828 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-22 12:03:41.350  INFO 13828 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-08-22 12:03:41.624  INFO 13828 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-08-22 12:03:41.764  INFO 13828 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-08-22 12:03:42.109  INFO 13828 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-08-22 12:03:42.125  INFO 13828 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-08-22 12:03:43.309  INFO 13828 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-08-22 12:03:43.316  INFO 13828 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 12:03:44.898  INFO 13828 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7b6ee853, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7470218e, org.springframework.security.web.context.SecurityContextPersistenceFilter@1f34e1b3, org.springframework.security.web.header.HeaderWriterFilter@3020ec43, org.springframework.security.web.authentication.logout.LogoutFilter@34809f44, com.example.testspring.JwTtokenFilter@73799654, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@586aef67, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@13df6851, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@25c69b15, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5f1189fe, org.springframework.security.web.session.SessionManagementFilter@3babdecf, org.springframework.security.web.access.ExceptionTranslationFilter@4d8f5b29, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@55ec8dcf]
2023-08-22 12:03:45.115  WARN 13828 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-08-22 12:03:45.840  INFO 13828 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-08-22 12:03:45.890  INFO 13828 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-08-22 12:03:45.905  INFO 13828 --- [restartedMain] c.e.testspring.TestSpringApplication     : Started TestSpringApplication in 8.979 seconds (JVM running for 9.679)
2023-08-22 12:04:19.403  INFO 13828 --- [http-nio-8080-exec-5] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-22 12:04:19.403  INFO 13828 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-08-22 12:04:19.404  INFO 13828 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms
2023-08-22 12:04:19.566  INFO 13828 --- [http-nio-8080-exec-5] c.e.t.loginterceptor.LogInterceptor      : INTERCEPTOR
2023-08-22 12:04:19.567  INFO 13828 --- [http-nio-8080-exec-5] c.e.t.loginterceptor.LogInterceptor      : 0:0:0:0:0:0:0:1
2023-08-22 12:04:19.567  INFO 13828 --- [http-nio-8080-exec-5] c.e.t.loginterceptor.LogInterceptor      : /admin/bill/
2023-08-22 12:04:19.894  INFO 13828 --- [http-nio-8080-exec-5] c.e.t.loginterceptor.LogInterceptor      : Done Request
2023-08-22 12:07:24.338  INFO 13828 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 12:07:24.341  INFO 13828 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2023-08-22 12:07:24.349  INFO 13828 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2023-08-22 12:07:30.017  INFO 6044 --- [restartedMain] c.e.testspring.TestSpringApplication     : Starting TestSpringApplication using Java 17.0.6 on MSI with PID 6044 (F:\spring-web\SpringProject3\target\classes started by tduca in F:\spring-web\SpringProject3)
2023-08-22 12:07:30.021  INFO 6044 --- [restartedMain] c.e.testspring.TestSpringApplication     : No active profile set, falling back to 1 default profile: "default"
2023-08-22 12:07:30.389  INFO 6044 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-08-22 12:07:30.389  INFO 6044 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-08-22 12:07:31.497  INFO 6044 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-22 12:07:31.607  INFO 6044 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 100 ms. Found 8 JPA repository interfaces.
2023-08-22 12:07:32.228  INFO 6044 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$40d40028] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-22 12:07:32.290  INFO 6044 --- [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2023-08-22 12:07:33.240  INFO 6044 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-08-22 12:07:33.253  INFO 6044 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-08-22 12:07:33.253  INFO 6044 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.76]
2023-08-22 12:07:33.440  INFO 6044 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-08-22 12:07:33.441  INFO 6044 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3051 ms
2023-08-22 12:07:33.755  INFO 6044 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-22 12:07:33.841  INFO 6044 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-08-22 12:07:34.085  INFO 6044 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-08-22 12:07:34.258  INFO 6044 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-08-22 12:07:34.713  INFO 6044 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-08-22 12:07:34.745  INFO 6044 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-08-22 12:07:36.125  INFO 6044 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-08-22 12:07:36.146  INFO 6044 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 12:07:37.907  INFO 6044 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1a249102, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3b78aec, org.springframework.security.web.context.SecurityContextPersistenceFilter@89a845e, org.springframework.security.web.header.HeaderWriterFilter@391fe539, org.springframework.security.web.authentication.logout.LogoutFilter@4185835e, com.example.testspring.JwTtokenFilter@7a94f819, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@679fd2b8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2e81d0a8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@24bea362, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@8099fb1, org.springframework.security.web.session.SessionManagementFilter@f05083, org.springframework.security.web.access.ExceptionTranslationFilter@3b9ae3ca, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@345455bd]
2023-08-22 12:07:38.155  WARN 6044 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-08-22 12:07:38.961  INFO 6044 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-08-22 12:07:39.023  INFO 6044 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-08-22 12:07:39.042  INFO 6044 --- [restartedMain] c.e.testspring.TestSpringApplication     : Started TestSpringApplication in 9.683 seconds (JVM running for 10.525)
2023-08-22 12:07:57.619  INFO 6044 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-22 12:07:57.619  INFO 6044 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-08-22 12:07:57.620  INFO 6044 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2023-08-22 12:07:57.774  INFO 6044 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : INTERCEPTOR
2023-08-22 12:07:57.775  INFO 6044 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : 0:0:0:0:0:0:0:1
2023-08-22 12:07:57.775  INFO 6044 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : /admin/bill/
2023-08-22 12:07:58.123  INFO 6044 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : Done Request
2023-08-22 12:12:14.788  INFO 6044 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 12:12:14.804  INFO 6044 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2023-08-22 12:12:14.819  INFO 6044 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2023-08-22 17:05:55.197  INFO 10932 --- [restartedMain] c.e.testspring.TestSpringApplication     : Starting TestSpringApplication using Java 17.0.6 on MSI with PID 10932 (F:\spring-web\SpringProject3\target\classes started by tduca in F:\spring-web\SpringProject3)
2023-08-22 17:05:55.200  INFO 10932 --- [restartedMain] c.e.testspring.TestSpringApplication     : No active profile set, falling back to 1 default profile: "default"
2023-08-22 17:05:55.670  INFO 10932 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-08-22 17:05:55.670  INFO 10932 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-08-22 17:05:57.398  INFO 10932 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-22 17:05:57.522  INFO 10932 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 110 ms. Found 10 JPA repository interfaces.
2023-08-22 17:05:58.075  INFO 10932 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$f92dee60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-22 17:05:58.169  INFO 10932 --- [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2023-08-22 17:05:59.130  INFO 10932 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-08-22 17:05:59.146  INFO 10932 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-08-22 17:05:59.147  INFO 10932 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.76]
2023-08-22 17:05:59.311  INFO 10932 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-08-22 17:05:59.311  INFO 10932 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3640 ms
2023-08-22 17:05:59.584  INFO 10932 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-22 17:05:59.684  INFO 10932 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-08-22 17:05:59.929  INFO 10932 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-08-22 17:06:00.085  INFO 10932 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-08-22 17:06:00.592  INFO 10932 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-08-22 17:06:00.624  INFO 10932 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-08-22 17:06:01.924  INFO 10932 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-08-22 17:06:01.936  INFO 10932 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 17:06:03.500  INFO 10932 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5b1b6d06, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@43627e61, org.springframework.security.web.context.SecurityContextPersistenceFilter@476586ac, org.springframework.security.web.header.HeaderWriterFilter@8f058a6, org.springframework.security.web.authentication.logout.LogoutFilter@682d5309, com.example.testspring.JwTtokenFilter@1cdc4c77, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@686e11fd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@ec35147, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1cd956b3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@11c72a21, org.springframework.security.web.session.SessionManagementFilter@5c94b035, org.springframework.security.web.access.ExceptionTranslationFilter@7d54fd94, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2b9e5975]
2023-08-22 17:06:03.765  WARN 10932 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-08-22 17:06:04.497  INFO 10932 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-08-22 17:06:04.543  INFO 10932 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-08-22 17:06:04.560  INFO 10932 --- [restartedMain] c.e.testspring.TestSpringApplication     : Started TestSpringApplication in 10.095 seconds (JVM running for 11.346)
2023-08-22 17:06:19.762  INFO 10932 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 17:06:19.766  INFO 10932 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2023-08-22 17:06:19.778  INFO 10932 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2023-08-22 17:06:26.698  INFO 6380 --- [restartedMain] c.e.testspring.TestSpringApplication     : Starting TestSpringApplication using Java 17.0.6 on MSI with PID 6380 (F:\spring-web\SpringProject3\target\classes started by tduca in F:\spring-web\SpringProject3)
2023-08-22 17:06:26.703  INFO 6380 --- [restartedMain] c.e.testspring.TestSpringApplication     : No active profile set, falling back to 1 default profile: "default"
2023-08-22 17:06:27.062  INFO 6380 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-08-22 17:06:27.063  INFO 6380 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-08-22 17:06:28.481  INFO 6380 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-22 17:06:28.623  INFO 6380 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 131 ms. Found 10 JPA repository interfaces.
2023-08-22 17:06:29.325  INFO 6380 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$88f3839d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-22 17:06:29.414  INFO 6380 --- [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2023-08-22 17:06:30.538  INFO 6380 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-08-22 17:06:30.555  INFO 6380 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-08-22 17:06:30.556  INFO 6380 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.76]
2023-08-22 17:06:30.759  INFO 6380 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-08-22 17:06:30.760  INFO 6380 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3697 ms
2023-08-22 17:06:31.058  INFO 6380 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-22 17:06:31.124  INFO 6380 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-08-22 17:06:31.362  INFO 6380 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-08-22 17:06:31.540  INFO 6380 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-08-22 17:06:31.994  INFO 6380 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-08-22 17:06:32.018  INFO 6380 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-08-22 17:06:33.470  INFO 6380 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-08-22 17:06:33.495  INFO 6380 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 17:06:35.857  INFO 6380 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4e1ff154, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1efb1469, org.springframework.security.web.context.SecurityContextPersistenceFilter@6391ff2f, org.springframework.security.web.header.HeaderWriterFilter@27918348, org.springframework.security.web.authentication.logout.LogoutFilter@37090158, com.example.testspring.JwTtokenFilter@542b4359, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5f71f8b6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@536de7d4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@17108502, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3fa6fbb4, org.springframework.security.web.session.SessionManagementFilter@1d37a420, org.springframework.security.web.access.ExceptionTranslationFilter@6a5c0ebc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2e27b1ca]
2023-08-22 17:06:36.200  WARN 6380 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-08-22 17:06:37.427  INFO 6380 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-08-22 17:06:37.727  INFO 6380 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-08-22 17:06:37.747  INFO 6380 --- [restartedMain] c.e.testspring.TestSpringApplication     : Started TestSpringApplication in 11.714 seconds (JVM running for 12.384)
2023-08-22 17:07:29.676  INFO 6380 --- [http-nio-8080-exec-3] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-22 17:07:29.677  INFO 6380 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-08-22 17:07:29.678  INFO 6380 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2023-08-22 17:07:29.717  INFO 6380 --- [http-nio-8080-exec-3] c.e.t.loginterceptor.LogInterceptor      : INTERCEPTOR
2023-08-22 17:07:29.717  INFO 6380 --- [http-nio-8080-exec-3] c.e.t.loginterceptor.LogInterceptor      : 0:0:0:0:0:0:0:1
2023-08-22 17:07:29.717  INFO 6380 --- [http-nio-8080-exec-3] c.e.t.loginterceptor.LogInterceptor      : /comment/list
2023-08-22 17:07:29.755  INFO 6380 --- [http-nio-8080-exec-3] c.e.t.controller.ExceptionController     : INFO

org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public com.example.testspring.dto.ResponseDTO<java.util.List<com.example.testspring.dto.CommentDTO>> com.example.testspring.controller.CommentController.list(com.example.testspring.dto.CommentDTO)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555) ~[tomcat-embed-core-9.0.76.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623) ~[tomcat-embed-core-9.0.76.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111) ~[spring-web-5.3.28.jar:5.3.28]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:164) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at com.example.testspring.JwTtokenFilter.doFilterInternal(JwTtokenFilter.java:42) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.28.jar:5.3.28]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]

2023-08-22 17:07:29.832  WARN 6380 --- [http-nio-8080-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public com.example.testspring.dto.ResponseDTO<java.util.List<com.example.testspring.dto.CommentDTO>> com.example.testspring.controller.CommentController.list(com.example.testspring.dto.CommentDTO)]
2023-08-22 17:07:29.832  INFO 6380 --- [http-nio-8080-exec-3] c.e.t.loginterceptor.LogInterceptor      : Done Request
2023-08-22 17:08:36.059  INFO 6380 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 17:08:36.065  INFO 6380 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2023-08-22 17:08:36.081  INFO 6380 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2023-08-22 17:08:41.864  INFO 3900 --- [restartedMain] c.e.testspring.TestSpringApplication     : Starting TestSpringApplication using Java 17.0.6 on MSI with PID 3900 (F:\spring-web\SpringProject3\target\classes started by tduca in F:\spring-web\SpringProject3)
2023-08-22 17:08:41.867  INFO 3900 --- [restartedMain] c.e.testspring.TestSpringApplication     : No active profile set, falling back to 1 default profile: "default"
2023-08-22 17:08:42.231  INFO 3900 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-08-22 17:08:42.232  INFO 3900 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-08-22 17:08:43.409  INFO 3900 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-22 17:08:43.529  INFO 3900 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 111 ms. Found 10 JPA repository interfaces.
2023-08-22 17:08:44.035  INFO 3900 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$8bd0f3be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-22 17:08:44.135  INFO 3900 --- [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2023-08-22 17:08:45.185  INFO 3900 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-08-22 17:08:45.205  INFO 3900 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-08-22 17:08:45.206  INFO 3900 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.76]
2023-08-22 17:08:45.360  INFO 3900 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-08-22 17:08:45.360  INFO 3900 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3127 ms
2023-08-22 17:08:45.709  INFO 3900 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-22 17:08:45.818  INFO 3900 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-08-22 17:08:46.099  INFO 3900 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-08-22 17:08:46.221  INFO 3900 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-08-22 17:08:46.698  INFO 3900 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-08-22 17:08:46.725  INFO 3900 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-08-22 17:08:48.068  INFO 3900 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-08-22 17:08:48.080  INFO 3900 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 17:08:49.590  INFO 3900 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7098d6e1, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1f34e1b3, org.springframework.security.web.context.SecurityContextPersistenceFilter@5d0a2c18, org.springframework.security.web.header.HeaderWriterFilter@7b5af36c, org.springframework.security.web.authentication.logout.LogoutFilter@47180a1, com.example.testspring.JwTtokenFilter@24cd8a80, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5a56b2ab, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7299af0f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6d3a1cf8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7a8c093c, org.springframework.security.web.session.SessionManagementFilter@a55f316, org.springframework.security.web.access.ExceptionTranslationFilter@9c1f068, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1bbf902f]
2023-08-22 17:08:49.800  WARN 3900 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-08-22 17:08:50.469  INFO 3900 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-08-22 17:08:50.517  INFO 3900 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-08-22 17:08:50.536  INFO 3900 --- [restartedMain] c.e.testspring.TestSpringApplication     : Started TestSpringApplication in 9.304 seconds (JVM running for 10.025)
2023-08-22 17:12:28.603  INFO 3900 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-22 17:12:28.603  INFO 3900 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-08-22 17:12:28.604  INFO 3900 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2023-08-22 17:12:28.644  INFO 3900 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : INTERCEPTOR
2023-08-22 17:12:28.645  INFO 3900 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : 0:0:0:0:0:0:0:1
2023-08-22 17:12:28.645  INFO 3900 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : /comment/
2023-08-22 17:12:29.130  INFO 3900 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : Done Request
2023-08-22 17:17:05.749  INFO 3900 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 17:17:05.753  INFO 3900 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2023-08-22 17:17:05.766  INFO 3900 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2023-08-22 17:17:11.985  INFO 17104 --- [restartedMain] c.e.testspring.TestSpringApplication     : Starting TestSpringApplication using Java 17.0.6 on MSI with PID 17104 (F:\spring-web\SpringProject3\target\classes started by tduca in F:\spring-web\SpringProject3)
2023-08-22 17:17:11.989  INFO 17104 --- [restartedMain] c.e.testspring.TestSpringApplication     : No active profile set, falling back to 1 default profile: "default"
2023-08-22 17:17:12.376  INFO 17104 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-08-22 17:17:12.376  INFO 17104 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-08-22 17:17:13.447  INFO 17104 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-22 17:17:13.555  INFO 17104 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 98 ms. Found 10 JPA repository interfaces.
2023-08-22 17:17:14.132  INFO 17104 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$3a26752c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-22 17:17:14.250  INFO 17104 --- [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2023-08-22 17:17:15.336  INFO 17104 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-08-22 17:17:15.360  INFO 17104 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-08-22 17:17:15.361  INFO 17104 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.76]
2023-08-22 17:17:15.556  INFO 17104 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-08-22 17:17:15.557  INFO 17104 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3180 ms
2023-08-22 17:17:15.843  INFO 17104 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-22 17:17:15.962  INFO 17104 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-08-22 17:17:16.258  INFO 17104 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-08-22 17:17:16.493  INFO 17104 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-08-22 17:17:17.066  INFO 17104 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-08-22 17:17:17.091  INFO 17104 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-08-22 17:17:18.597  INFO 17104 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-08-22 17:17:18.605  INFO 17104 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 17:17:20.295  INFO 17104 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@52eb0bd9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@89a845e, org.springframework.security.web.context.SecurityContextPersistenceFilter@6b6f811a, org.springframework.security.web.header.HeaderWriterFilter@7a32637e, org.springframework.security.web.authentication.logout.LogoutFilter@7135d57e, com.example.testspring.JwTtokenFilter@4535a0b5, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3a5c1ee4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6a156846, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@754e4473, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@a6cb986, org.springframework.security.web.session.SessionManagementFilter@64f932d5, org.springframework.security.web.access.ExceptionTranslationFilter@3df7368a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5b70622e]
2023-08-22 17:17:20.540  WARN 17104 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-08-22 17:17:21.312  INFO 17104 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-08-22 17:17:21.369  INFO 17104 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-08-22 17:17:21.389  INFO 17104 --- [restartedMain] c.e.testspring.TestSpringApplication     : Started TestSpringApplication in 10.021 seconds (JVM running for 10.79)
2023-08-22 17:18:15.555  INFO 17104 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-22 17:18:15.556  INFO 17104 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-08-22 17:18:15.557  INFO 17104 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2023-08-22 17:18:15.585  INFO 17104 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : INTERCEPTOR
2023-08-22 17:18:15.585  INFO 17104 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : 0:0:0:0:0:0:0:1
2023-08-22 17:18:15.585  INFO 17104 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : /comment/
2023-08-22 17:18:15.950  INFO 17104 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : Done Request
2023-08-22 17:21:39.027  INFO 17104 --- [http-nio-8080-exec-5] c.e.t.loginterceptor.LogInterceptor      : INTERCEPTOR
2023-08-22 17:21:39.028  INFO 17104 --- [http-nio-8080-exec-5] c.e.t.loginterceptor.LogInterceptor      : 0:0:0:0:0:0:0:1
2023-08-22 17:21:39.028  INFO 17104 --- [http-nio-8080-exec-5] c.e.t.loginterceptor.LogInterceptor      : /comment/
2023-08-22 17:21:39.053  INFO 17104 --- [http-nio-8080-exec-5] c.e.t.loginterceptor.LogInterceptor      : Done Request
2023-08-22 17:22:36.842  INFO 17104 --- [http-nio-8080-exec-6] c.e.t.controller.ExceptionController     : INFO

org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:260) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:442) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:383) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:125) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:67) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:498) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1266) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1048) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529) ~[tomcat-embed-core-9.0.76.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623) ~[tomcat-embed-core-9.0.76.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111) ~[spring-web-5.3.28.jar:5.3.28]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:164) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at com.example.testspring.JwTtokenFilter.doFilterInternal(JwTtokenFilter.java:42) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.28.jar:5.3.28]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]

2023-08-22 17:22:36.846  WARN 17104 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
2023-08-22 17:23:31.436  INFO 17104 --- [http-nio-8080-exec-8] c.e.t.loginterceptor.LogInterceptor      : INTERCEPTOR
2023-08-22 17:23:31.436  INFO 17104 --- [http-nio-8080-exec-8] c.e.t.loginterceptor.LogInterceptor      : 0:0:0:0:0:0:0:1
2023-08-22 17:23:31.436  INFO 17104 --- [http-nio-8080-exec-8] c.e.t.loginterceptor.LogInterceptor      : /comment/list
2023-08-22 17:23:31.661  INFO 17104 --- [http-nio-8080-exec-8] c.e.t.controller.ExceptionController     : INFO

org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:465) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:104) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:290) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:183) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:135) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555) ~[tomcat-embed-core-9.0.76.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623) ~[tomcat-embed-core-9.0.76.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111) ~[spring-web-5.3.28.jar:5.3.28]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:164) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at com.example.testspring.JwTtokenFilter.doFilterInternal(JwTtokenFilter.java:42) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.9.jar:5.7.9]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.28.jar:5.3.28]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.28.jar:5.3.28]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.28.jar:5.3.28]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.76.jar:9.0.76]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"])
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:789) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
Caused by: java.lang.StackOverflowError: null
	at java.base/java.lang.ClassLoader.defineClass1(Native Method) ~[na:na]
	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1012) ~[na:na]
	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150) ~[na:na]
	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862) ~[na:na]
	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760) ~[na:na]
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681) ~[na:na]
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639) ~[na:na]
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188) ~[na:na]
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520) ~[na:na]
	at com.fasterxml.jackson.databind.JsonMappingException.prependPath(JsonMappingException.java:445) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:792) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.13.5.jar:2.13.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.5.jar:2.13.5]

2023-08-22 17:23:31.683  WARN 17104 --- [http-nio-8080-exec-8] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.testspring.entity.ProductColor["product"]->com.example.testspring.entity.Product$HibernateProxy$lRPGhSaD["productColors"])]
2023-08-22 17:23:31.686  INFO 17104 --- [http-nio-8080-exec-8] c.e.t.loginterceptor.LogInterceptor      : Done Request
2023-08-22 17:25:26.946  INFO 17104 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 17:25:26.951  INFO 17104 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2023-08-22 17:25:26.964  INFO 17104 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2023-08-22 21:38:58.826  INFO 11700 --- [restartedMain] c.e.testspring.TestSpringApplication     : Starting TestSpringApplication using Java 17.0.6 on MSI with PID 11700 (F:\spring-web\SpringProject3\target\classes started by tduca in F:\spring-web\SpringProject3)
2023-08-22 21:38:58.829  INFO 11700 --- [restartedMain] c.e.testspring.TestSpringApplication     : No active profile set, falling back to 1 default profile: "default"
2023-08-22 21:38:59.202  INFO 11700 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-08-22 21:38:59.202  INFO 11700 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-08-22 21:39:00.800  INFO 11700 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-22 21:39:00.921  INFO 11700 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 109 ms. Found 10 JPA repository interfaces.
2023-08-22 21:39:01.421  INFO 11700 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$d7d68107] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-22 21:39:01.511  INFO 11700 --- [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2023-08-22 21:39:02.420  INFO 11700 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-08-22 21:39:02.440  INFO 11700 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-08-22 21:39:02.440  INFO 11700 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.76]
2023-08-22 21:39:02.608  INFO 11700 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-08-22 21:39:02.609  INFO 11700 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3405 ms
2023-08-22 21:39:02.868  INFO 11700 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-22 21:39:02.959  INFO 11700 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-08-22 21:39:03.207  INFO 11700 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-08-22 21:39:03.325  INFO 11700 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-08-22 21:39:03.861  INFO 11700 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-08-22 21:39:03.890  INFO 11700 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-08-22 21:39:05.268  INFO 11700 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-08-22 21:39:05.283  INFO 11700 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 21:39:07.099  INFO 11700 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@115f2496, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@47e594c0, org.springframework.security.web.context.SecurityContextPersistenceFilter@114ba22, org.springframework.security.web.header.HeaderWriterFilter@47180a1, org.springframework.security.web.authentication.logout.LogoutFilter@1bbf902f, com.example.testspring.JwTtokenFilter@4c356594, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1cd956b3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@44b1a76e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1cfbac61, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@277c16ad, org.springframework.security.web.session.SessionManagementFilter@2d99cec6, org.springframework.security.web.access.ExceptionTranslationFilter@257a83a1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@155ed0ca]
2023-08-22 21:39:07.311  WARN 11700 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-08-22 21:39:07.633  WARN 11700 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'reviewController' method 
com.example.testspring.controller.ReviewController#update(ReviewDTO)
to {PUT [/comment/]}: There is already 'commentController' bean method
com.example.testspring.controller.CommentController#update(CommentDTO) mapped.
2023-08-22 21:39:07.633  INFO 11700 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 21:39:07.633  INFO 11700 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2023-08-22 21:39:07.649  INFO 11700 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2023-08-22 21:39:07.649  INFO 11700 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2023-08-22 21:39:07.664  INFO 11700 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-08-22 21:39:07.696 ERROR 11700 --- [restartedMain] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'reviewController' method 
com.example.testspring.controller.ReviewController#update(ReviewDTO)
to {PUT [/comment/]}: There is already 'commentController' bean method
com.example.testspring.controller.CommentController#update(CommentDTO) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804) ~[spring-beans-5.3.28.jar:5.3.28]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.28.jar:5.3.28]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.28.jar:5.3.28]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.28.jar:5.3.28]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.28.jar:5.3.28]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.28.jar:5.3.28]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.28.jar:5.3.28]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955) ~[spring-beans-5.3.28.jar:5.3.28]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920) ~[spring-context-5.3.28.jar:5.3.28]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.28.jar:5.3.28]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.13.jar:2.7.13]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731) ~[spring-boot-2.7.13.jar:2.7.13]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.13.jar:2.7.13]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307) ~[spring-boot-2.7.13.jar:2.7.13]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303) ~[spring-boot-2.7.13.jar:2.7.13]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292) ~[spring-boot-2.7.13.jar:2.7.13]
	at com.example.testspring.TestSpringApplication.main(TestSpringApplication.java:27) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50) ~[spring-boot-devtools-2.7.13.jar:2.7.13]
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'reviewController' method 
com.example.testspring.controller.ReviewController#update(ReviewDTO)
to {PUT [/comment/]}: There is already 'commentController' bean method
com.example.testspring.controller.CommentController#update(CommentDTO) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:669) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:635) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:332) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:420) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:76) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$2(AbstractHandlerMethodMapping.java:299) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721) ~[na:na]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:297) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:266) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:225) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:213) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:205) ~[spring-webmvc-5.3.28.jar:5.3.28]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.28.jar:5.3.28]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.28.jar:5.3.28]
	... 21 common frames omitted

2023-08-22 21:42:29.690  INFO 10532 --- [restartedMain] c.e.testspring.TestSpringApplication     : Starting TestSpringApplication using Java 17.0.6 on MSI with PID 10532 (F:\spring-web\SpringProject3\target\classes started by tduca in F:\spring-web\SpringProject3)
2023-08-22 21:42:29.692  INFO 10532 --- [restartedMain] c.e.testspring.TestSpringApplication     : No active profile set, falling back to 1 default profile: "default"
2023-08-22 21:42:30.050  INFO 10532 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-08-22 21:42:30.051  INFO 10532 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-08-22 21:42:31.232  INFO 10532 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-22 21:42:31.376  INFO 10532 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 129 ms. Found 10 JPA repository interfaces.
2023-08-22 21:42:32.070  INFO 10532 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$4b6308ad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-22 21:42:32.140  INFO 10532 --- [restartedMain] .w.s.a.s.AnnotationActionEndpointMapping : Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2023-08-22 21:42:33.209  INFO 10532 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-08-22 21:42:33.227  INFO 10532 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-08-22 21:42:33.228  INFO 10532 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.76]
2023-08-22 21:42:33.410  INFO 10532 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-08-22 21:42:33.410  INFO 10532 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3358 ms
2023-08-22 21:42:33.745  INFO 10532 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-22 21:42:33.804  INFO 10532 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-08-22 21:42:34.041  INFO 10532 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-08-22 21:42:34.194  INFO 10532 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-08-22 21:42:34.628  INFO 10532 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-08-22 21:42:34.653  INFO 10532 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-08-22 21:42:36.017  INFO 10532 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-08-22 21:42:36.027  INFO 10532 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 21:42:37.681  INFO 10532 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@537856d5, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5fb58d7c, org.springframework.security.web.context.SecurityContextPersistenceFilter@412059fa, org.springframework.security.web.header.HeaderWriterFilter@7862194, org.springframework.security.web.authentication.logout.LogoutFilter@7b30dc93, com.example.testspring.JwTtokenFilter@4f22a6f6, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@11c3b046, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6db1bb07, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@daa765f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@47c8b553, org.springframework.security.web.session.SessionManagementFilter@7ce4cd21, org.springframework.security.web.access.ExceptionTranslationFilter@793cb901, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@75cbacf4]
2023-08-22 21:42:37.947  WARN 10532 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-08-22 21:42:38.802  INFO 10532 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-08-22 21:42:38.880  INFO 10532 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-08-22 21:42:38.900  INFO 10532 --- [restartedMain] c.e.testspring.TestSpringApplication     : Started TestSpringApplication in 9.916 seconds (JVM running for 10.907)
2023-08-22 21:48:27.543  INFO 10532 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-22 21:48:27.543  INFO 10532 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-08-22 21:48:27.544  INFO 10532 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2023-08-22 21:48:27.575  INFO 10532 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : INTERCEPTOR
2023-08-22 21:48:27.576  INFO 10532 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : 0:0:0:0:0:0:0:1
2023-08-22 21:48:27.576  INFO 10532 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : /review/
2023-08-22 21:48:27.975  INFO 10532 --- [http-nio-8080-exec-1] c.e.t.loginterceptor.LogInterceptor      : Done Request
2023-08-22 22:08:57.624  INFO 10532 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-08-22 22:08:57.642  INFO 10532 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2023-08-22 22:08:57.672  INFO 10532 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
